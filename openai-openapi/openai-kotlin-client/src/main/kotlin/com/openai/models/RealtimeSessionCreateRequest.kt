/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport",
    "PropertyName",
    "unused"
)

package com.openai.models

import com.openai.models.RealtimeResponseCreateParamsMaxResponseOutputTokens
import com.openai.models.RealtimeResponseCreateParamsToolsInner
import com.openai.models.RealtimeSessionCreateRequestTurnDetection
import com.openai.models.RealtimeSessionInputAudioTranscription

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Realtime session object configuration.
 *
 * @param model The Realtime model used for this session. 
 * @param modalities The set of modalities the model can respond with. To disable audio, set this to [\"text\"]. 
 * @param instructions The default system instructions (i.e. system message) prepended to model  calls. This field allows the client to guide the model on desired  responses. The model can be instructed on response content and format,  (e.g. \"be extremely succinct\", \"act friendly\", \"here are examples of good  responses\") and on audio behavior (e.g. \"talk quickly\", \"inject emotion  into your voice\", \"laugh frequently\"). The instructions are not guaranteed  to be followed by the model, but they provide guidance to the model on the  desired behavior.  Note that the server sets default instructions which will be used if this  field is not set and are visible in the `session.created` event at the  start of the session. 
 * @param voice The voice the model uses to respond. Voice cannot be changed during the  session once the model has responded with audio at least once. Current  voice options are `alloy`, `ash`, `ballad`, `coral`, `echo` `sage`,  `shimmer` and `verse`. 
 * @param input_audio_format The format of input audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`.
 * @param output_audio_format The format of output audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`.
 * @param input_audio_transcription
 * @param turn_detection
 * @param tools Tools (functions) available to the model.
 * @param tool_choice How the model chooses tools. Options are `auto`, `none`, `required`, or  specify a function.
 * @param temperature Sampling temperature for the model, limited to [0.6, 1.2]. Defaults to 0.8. 
 * @param max_response_output_tokens
 */


data class RealtimeSessionCreateRequest (

    /* The Realtime model used for this session.  */
    val model: RealtimeSessionCreateRequest.Model,

    /* The set of modalities the model can respond with. To disable audio, set this to [\"text\"].  */
    val modalities: kotlin.collections.List<RealtimeSessionCreateRequest.Modalities>? = null,

    /* The default system instructions (i.e. system message) prepended to model  calls. This field allows the client to guide the model on desired  responses. The model can be instructed on response content and format,  (e.g. \"be extremely succinct\", \"act friendly\", \"here are examples of good  responses\") and on audio behavior (e.g. \"talk quickly\", \"inject emotion  into your voice\", \"laugh frequently\"). The instructions are not guaranteed  to be followed by the model, but they provide guidance to the model on the  desired behavior.  Note that the server sets default instructions which will be used if this  field is not set and are visible in the `session.created` event at the  start of the session.  */
    val instructions: kotlin.String? = null,

    /* The voice the model uses to respond. Voice cannot be changed during the  session once the model has responded with audio at least once. Current  voice options are `alloy`, `ash`, `ballad`, `coral`, `echo` `sage`,  `shimmer` and `verse`.  */
    val voice: RealtimeSessionCreateRequest.Voice? = null,

    /* The format of input audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`.  */
    val input_audio_format: RealtimeSessionCreateRequest.InputAudioFormat? = null,

    /* The format of output audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`.  */
    val output_audio_format: RealtimeSessionCreateRequest.OutputAudioFormat? = null,

    val input_audio_transcription: RealtimeSessionInputAudioTranscription? = null,

    val turn_detection: RealtimeSessionCreateRequestTurnDetection? = null,

    /* Tools (functions) available to the model. */
    val tools: kotlin.collections.List<RealtimeResponseCreateParamsToolsInner>? = null,

    /* How the model chooses tools. Options are `auto`, `none`, `required`, or  specify a function.  */
    val tool_choice: kotlin.String? = null,

    /* Sampling temperature for the model, limited to [0.6, 1.2]. Defaults to 0.8.  */
    val temperature: java.math.BigDecimal? = null,

    val max_response_output_tokens: RealtimeResponseCreateParamsMaxResponseOutputTokens? = null

) {

    /**
     * The Realtime model used for this session. 
     *
     * Values: realtimeMinusPreview,realtimeMinusPreviewMinus2024Minus10Minus01,realtimeMinusPreviewMinus2024Minus12Minus17,miniMinusRealtimeMinusPreview,miniMinusRealtimeMinusPreviewMinus2024Minus12Minus17
     */
    @JsonClass(generateAdapter = false)
    enum class Model {
        `gpt-4o-realtime-preview`,
        `gpt-4o-realtime-preview-2024-10-01`,
        `gpt-4o-realtime-preview-2024-12-17`,
        `gpt-4o-mini-realtime-preview`,
        `gpt-4o-mini-realtime-preview-2024-12-17`,
    }
    /**
     * The set of modalities the model can respond with. To disable audio, set this to [\"text\"]. 
     *
     * Values: text,audio
     */
    @JsonClass(generateAdapter = false)
    enum class Modalities {
        text,
        audio
    }
    /**
     * The voice the model uses to respond. Voice cannot be changed during the  session once the model has responded with audio at least once. Current  voice options are `alloy`, `ash`, `ballad`, `coral`, `echo` `sage`,  `shimmer` and `verse`. 
     *
     * Values: alloy,ash,ballad,coral,echo,sage,shimmer,verse
     */
    @JsonClass(generateAdapter = false)
    enum class Voice {
        alloy,
        ash,
        ballad,
        coral,
        echo,
        sage,
        shimmer,
        verse
    }
    /**
     * The format of input audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`. 
     *
     * Values: pcm16,g711_ulaw,g711_alaw
     */
    @JsonClass(generateAdapter = false)
    enum class InputAudioFormat {
        pcm16,
        g711_ulaw,
        g711_alaw
    }
    /**
     * The format of output audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`. 
     *
     * Values: pcm16,g711_ulaw,g711_alaw
     */
    @JsonClass(generateAdapter = false)
    enum class OutputAudioFormat {
        pcm16,
        g711_ulaw,
        g711_alaw
    }
}

